%% Example see USGS modpath Version 6 (2012)
%% SIMULATION1: backward endpoint simulation (see manual p36ff 43)
% TO 130221

path(path,fileparts(pwd))

%% make sure path is set to parent directory
d=dir('..');
if ~strmatchi('mf_adaptALL.m',{d.name})
    error('%s: Can''t find file %s in the parent directory,\n%s\n',...
        mfilename,'mf_adaptALL.m',fileparts(pwd));
else        
    mf_adaptALL;
end

%% Modpath info pertaining to this simulation

%%
% Generate a zoneArray in which the cells that are inside a waterBodyObj
% get as their value the value of the nr property of the different
% waterBodyObjs.
mask = true(gr.Ny,gr.Nx);
maskLayer = 1;
%%
% Show these cells on the already plotted grid.

%%
% Specify the number and placement of the starting points with each cell.
zoneVals = {true,'name',basename,'maskLay',maskLayer,'IFace',6,'placement',2,'releaseT',0,'LineSpec','b.'}; 

%%
% Geerate the mpath_partileGroupObj from which MODPATH can generate the
% staring locations of the particles.
pGrp = mpath_particleGroupObj(gr,mask,zoneVals);

%pGrp = mpath_particleGroupObj(gr,ZONE,zoneVals);

%% Particles
% The definition above will allow to generate input for MODPATH from which
% MODPATH can generate the required starting points. So mfLab does not need
% to do that. To allow plotting the particles within mfLab, they can also
% be generated by mfLab using the method getParticles. This methods addes
% the particles to the mpath_particleGroupObj
pGrp   = pGrp.getParticles(gr);

%%
% after which they can be shown graphically
%
% First show the mesh:
figure; hold on; view(3); xlabel('x [m]'); ylabel('y [m]'); zlabel('z [m]');
gr.plotMesh('faceAlpha',0.15);

%%
% Then plot the particles using the lineSpec pertaining to each group
pGrp.plot(); title('Particles starting points');

%%
% You can turn the graphic by hand to better view the particles

save underneath zoneVals
